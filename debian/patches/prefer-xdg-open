Add xdg-open as the first choice whenever this seems to be useful.
--- a/lib/configure.py
+++ b/lib/configure.py
@@ -622,7 +622,7 @@ def checkFormatEntries(dtl_tools):
 \Format xbm        xbm     XBM                    "" "%s"	"%s"	""	"image/x-xbitmap"
 \Format xpm        xpm     XPM                    "" "%s"	"%s"	""	"image/x-xpixmap"'''
     path, iv = checkViewerNoRC('a raster image viewer',
-        ['xv', 'gwenview', 'kview',
+        ['xdg-open', 'xv', 'gwenview', 'kview',
          'eog', 'xviewer', 'ristretto', 'gpicview', 'lximage-qt',
          'xdg-open', 'gimp-remote', 'gimp'],
         rc_entry = [imageformats])
@@ -679,7 +679,7 @@ def checkFormatEntries(dtl_tools):
     #checkProg('a Postscript interpreter', ['gs'],
     #  rc_entry = [ r'\ps_command "%%"' ])
     checkViewer('a Postscript previewer',
-                ['kghostview', 'okular', 'qpdfview --unique',
+                ['xdg-open', 'kghostview', 'okular', 'qpdfview --unique',
                  'evince', 'xreader',
                  'gv', 'ghostview -swap', 'gsview64', 'gsview32'],
         rc_entry = [r'''\Format eps        eps     EPS                    "" "%%"	""	"vector"	"image/x-eps"
@@ -690,7 +690,7 @@ def checkFormatEntries(dtl_tools):
     # maybe use "bestApplication()" from https://github.com/jleclanche/python-mime
     # the MIME type is set for pdf6, because that one needs to be autodetectable by libmime
     checkViewer('a PDF previewer',
-                ['pdfview', 'kpdf', 'okular', 'qpdfview --unique',
+                ['xdg-open', 'pdfview', 'kpdf', 'okular', 'qpdfview --unique',
                  'evince', 'xreader', 'kghostview', 'xpdf', 'SumatraPDF',
                  'acrobat', 'acroread', 'mupdf',
                  'gv', 'ghostview', 'AcroRd32', 'gsview64', 'gsview32'],
@@ -703,7 +703,7 @@ def checkFormatEntries(dtl_tools):
 \Format pdf7       pdf    "PDF (cropped)"         "" "%%"	""	"document,vector"	""
 \Format pdf8       pdf    "PDF (lower resolution)"         "" "%%"	""	"document,vector"	""'''])
     #
-    checkViewer('a DVI previewer', ['xdvi', 'kdvi', 'okular',
+    checkViewer('a DVI previewer', ['xdg-open', 'xdvi', 'kdvi', 'okular',
                                     'evince', 'xreader',
                                     'yap', 'dviout -Set=!m'],
         rc_entry = [r'''\Format dvi        dvi     DVI                    D  "%%"	""	"document,vector,menu=export"	"application/x-dvi"
@@ -712,13 +712,13 @@ def checkFormatEntries(dtl_tools):
         # Windows only: DraftDVI
         addToRC(r'\Format dvi2       dvi     DraftDVI               ""	""	""	"vector"	""')
     #
-    checkViewer('an HTML previewer', ['firefox', 'mozilla file://$$p$$i', 'netscape'],
+    checkViewer('an HTML previewer', ['xdg-open', 'firefox', 'mozilla file://$$p$$i', 'netscape'],
         rc_entry = [r'\Format html      "html, htm" HTML                H  "%%"	""	"document,menu=export"	"text/html"'])
     #
     checkViewerEditor('Noteedit', ['noteedit'],
         rc_entry = [r'\Format noteedit   not     Noteedit               "" "%%"	"%%"	"vector"	""'])
     #
-    checkViewerEditor('an OpenDocument viewer', ['libreoffice', 'lwriter', 'lowriter', 'oowriter', 'swriter', 'abiword'],
+    checkViewerEditor('an OpenDocument viewer', ['xdg-open', 'libreoffice', 'lwriter', 'lowriter', 'oowriter', 'swriter', 'abiword'],
         rc_entry = [r'''\Format odt        odt     "OpenDocument (tex4ht)"  "" "%%"	"%%"	"document,vector,menu=export"	"application/vnd.oasis.opendocument.text"
 \Format odt2       odt    "OpenDocument (eLyXer)"  "" "%%"	"%%"	"document,vector,menu=export"	"application/vnd.oasis.opendocument.text"
 \Format odt3       odt    "OpenDocument (Pandoc)"  "" "%%"	"%%"	"document,vector,menu=export"	"application/vnd.oasis.opendocument.text"
